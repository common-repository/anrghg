<?php
// phpcs:ignoreFile
/**
 * Templates for configuration filters
 *
 * @since 0.24.0
 * @package WordPress
 * @subpackage A.N.R.GHG Publishing Toolkit
 *
 * CAUTION: Please do not edit this file in this plugin folder,
 * since it is not included when WordPress loads this plugin,
 * and because it will be overwritten during plugin updates.
 *
 * HOW TO: Copy-paste any of these templates into a mini plugin
 * and edit the return value.
 * A template for a mini plugin is included in this folder.
 * @see ./template-mini-plugin.php
 *
 * For theme-dependent values, it may be more convenient to set
 * the filters up in a child theme’s `functions.php`.
 *
 * Deriving a child theme from any theme may be done in a fully
 * automated process using the Generate Child Theme plugin from
 * Catch Plugins. Theme names must never start with a digit, as
 * the derived function name would be in breach of PHP rules.
 * @link https://wordpress.org/plugins/generate-child-theme/
 * @link https://catchplugins.com/plugins/generate-child-theme/
 *
 * NOTE: These filters override values set for the same options
 * in the plugin’s settings page in the Admin area and saved to
 * the database.
 * Please do not use any of these filters, if the corresponding
 * setting in the plugin’s settings page should stay effective.
 *
 * NOTE FOR MULTILINGUAL websites with string translation pane:
 * String translations are effective only for strings stored in
 * the database, because translation managers filter strings as
 * they are retrieved at a `get_option()` function call.
 * Saving the options page at least once is therefore required.
 * Then, for the translations to stay effective, the value must
 * not be changed by any of these filters.
 *
 * TECHNICAL NOTE: All values of the settings, like the default
 * values as filled in below for template purpose, are strings,
 * and there are no numbers (integers or floating decimals) nor
 * Booleans (true or false), for consistency with the way these
 * are stored in the database. However, in PHP, both the string
 * '0' and the integer 0 (and the float 0.0) evaluate as false,
 * while all other strings evaluate as true.
 *
 * This file is not a part of the plugin’s code.
 * To allow handy one-liner templates, PHPCS does not check this file.
 */

defined( 'ABSPATH' ) || exit( nl2br( "\r\n\r\n&nbsp; &nbsp; &nbsp; Sorry, this PHP file cannot be displayed in the browser." ) );



/**
 * Security: Stay logged in and don’t leave logging in available non-stop.
 *
 * Security is improved by not sending authentication cookies except when
 * a constant is defined as true in a mini-plugin editable on the hosting
 * platform. The lifespan of the cookie may then optionally be increased.
 *
 * CAUTION: This security feature is efficient only on websites hosted on
 *          a dedicated server, a Virtual Private Server (VPS), or shared
 *          hosting with VPS level security set up by the hosting provider.
 *
 *          Unless the hosting provider has set up VPS level security,
 *          shared hosting can be hacked by web shell from any website
 *          in the same home directory.
 *
 * @link https://resources.infosecinstitute.com/topic/hacking-a-wordpress-site/
 * @date updated_date="05/05/2015" posted_date="05/05/2015"
 * @link https://secure.wphackedhelp.com/blog/hack-wordpress-website/
 * @date updated_time="2023-01-06T07:34:56+00:00" published_time="2021-02-25T14:16:20+00:00"
 * @link https://www.cloudways.com/blog/wordpress-sql-injection-protection/
 * @date Updated on December 8, 2021
 * @link https://www.getastra.com/blog/knowledge-base/shared-hosting-security-risks/
 * @date Updated on: July 22, 2022
 * @link https://secure.wphackedhelp.com/blog/web-shell-php-exploit/
 * @date Updated on January 4, 2023
 *
 * Unlike hosting platform login information, WordPress login information
 * may be transparent to SQL injection attacks.
 *
 * Logging into WordPress may be done through the Hosting Platform.
 * If this is the only way used to access the Admin area, then the login
 * dialog may be blanked out. An optional message may then be displayed
 * in its place.
 *
 * This security enhancement optionally prevents a WordPress website from
 * sending auth cookies, either by blocking auth cookie generation, or by
 * making the login dialog unavailable in the first place, an option that
 * must not be chosen if the login dialog is still used sporadically.
 * Making a public page reflect the availability of an action would allow
 * bots to monitor that availability in real time.
 *
 * If logging in on a public page is desired, the authentication cookie
 * generation may be active during narrow windows of opportunity.
 *
 * For convenience, these windows may be spaced out farther than 14 days
 * using the authentication cookie lifespan configuration feature. This
 * feature is available only if the login control constant is defined.
 *
 * Toggling the availability of auth cookies is done by editing this
 * constant’s value. The possible values are true and false:
 *      true       Authentication cookies are sent.
 *      false      Authentication cookies are not sent.
 *
 * The recommended place for defining this constant is a mini-plugin, as
 * this is stable across switching themes. Then it can be edited in the
 * Admin area using the WordPress Plugin Editor.
 *
 * Alternatively, the Hosting Platform’s file manager may be used, or an
 * FTP client for editing the file locally.
 *
 * The name of the constant is `ANRGHG_WP_LOGIN_ACTIVE` (by default) or
 * `ANRGHG_WP_LOGIN_` plus some letters and underscore as configured so
 * that each site in a multisite network can have an individual toggle.
 * @see ./template-mini-plugin.php
 *
 * If the login dialog is not used any longer, alternative high-profile
 * or standard behavior blanks the dialog out and displays a message in
 * its place, for high profile, or does not elaborate, for standard.
 *
 * This option is based on code from Jonathan Daggerhart (@daggerhart on GitHub).
 * @link https://gist.github.com/daggerhart/d19821ff8ce836a5fc68
 *
 * Auth cookie lifespan editing is based on code from Jenson Felsberg.
 * @link http://wpcodesnippet.com/keep-users-logged-in-longer-wordpress/
 *
 * NOTE: There is no switch to turn this feature on or off.
 * Defining the constant in a mini-plugin acts as a switch.
 * Conversely these parameters are configurable only on the
 * settings page, because for security reasons there are no
 * configuration filters available.
 */
// Turn login off by replacing true with false.
define( 'ANRGHG_WP_LOGIN_ACTIVE', true );



/**
 * Localization
 */

/**
 * Sync with WordPress Core
 *
 * As of v1.6.4, 22.5% of Gettext string instances are in sync.
 * Syncing as many strings as possible allows to leverage every
 * translation effort made for WordPress Core consistently with
 * this being a plugin for WordPress.
 *
 * As synced strings may be suboptimal due to limited available
 * strings or translations may be under development, syncing is
 * optional. It may be the default but opting out is available.
 *
 * '1': The most possible strings are synced.
 * '0': Available alternative strings are used.
 */
add_filter( 'anrghg_sync_i18n_with_wordpress_core', function() { return '1'; } );

/**
 * Increase identifier legibility: Keep uppercase letters in fragment identifiers
 *
 * '1': Identifiers may contain uppercase letters.
 * '0': Identifiers are all lowercase.
 */
add_filter( 'anrghg_fragment_ids_support_titlecase', function() { return '0'; } );

/**
 * Additional conversions
 *
 * Please separate values with a comma, and pairs with a semicolon.
 * Line breaks and spaces are ignored. Example:
 *
 *     original1,result1;original2, result2;
 *     original3 ,  result3;
 *
 * The conversions defined below are performed first.
 */
add_filter( 'anrghg_additional_id_conversions', function() { return ''; } );

/**
 * Increase identifier legibility: Convert some more letters
 *
 * Included: ɛ➔3, ɔ➔o, ŋ➔ng, ɲ➔nj, ɂ➔7, ʔ➔7, ɣ➔g, ɠ➔g, ȝ➔3, ʒ➔zh, ǝ➔e. ɑ➔a, ʊ➔u, ʃ➔sh.
 *
 * '1': The conversions enumerated above are added.
 * '0': No other letters are converted.
 */
add_filter( 'anrghg_fragment_ids_more_conversions', function() { return '0'; } );

/**
 * Increase identifier legibility: Remove accents and other diacritics
 *
 * Paragraph links, heading links and table of contents heavily
 * rely on fragment identifiers derived from the content. While
 * in Non-Latin scripts these are entirely URL-encoded and thus
 * not human-readable, in Latin script a simplified notation is
 * often preferred.
 *
 * Some conversions fixing a number of problems are performed by default:
 * £➔L, å➔aa, č➔cz, ř➔rz, ß➔ss, ä➔ae; in German and Swedish: ö➔oe, ü➔ue;
 * all hyphens, dashes and minus sign are replaced with ASCII hyphen, as
 * are both punctuation apostrophes, while letter apostrophe ➔ underscore.
 * Narrow no-break space and zero width space are removed.
 *
 * * Full list at https://developer.wordpress.org/reference/functions/remove_accents/
 *
 * '1': A set of diacritized and other letters* are converted.
 * '0': Most letters beyond the base alphabet are URL-encoded.
 * * Currently: ɛ➔3, ɔ➔o, ŋ➔ng, ɲ➔nj, ɂ➔7, ʔ➔7, ɣ➔g, ɠ➔g, ȝ➔3, ʒ➔zh, ǝ➔e. ɑ➔a, ʊ➔u, ʃ➔sh.
 */
add_filter( 'anrghg_fragment_ids_remove_accents', function() { return '1'; } );

/**
 * Fragment identifier separator
 *
 * The fragment identifier separator is required for disambiguation in edge cases;
 * if set to an empty string, it will fall back to an ASCII hyphen-minus at runtime.
 *
 * Used in URL fragment identifiers of paragraphs, headings and complements.
 */
add_filter( 'anrghg_fragment_id_separator', function() { return '-'; } );

/**
 * Maximum length of fragment identifiers
 *
 * Content-derived fragment IDs max at 200 characters and are cropped to
 * the latest space. Such IDs may be considered too long.
 */
add_filter( 'anrghg_fragment_identifier_max_length', function() { return '200'; } );

/**
 * Alternative slug generation
 *
 * Use the same conversions and casing rules to generate
 * the slugs for posts and pages, than for fragment IDs.
 *
 * '1': Slugs are generated using rules specified above.
 * '0': Slug generation remains unchanged.
 */
add_filter( 'anrghg_alternative_sanitize_title_active', function() { return '0'; } );

/**
 * Option to deactivate WPTexturize
 *
 * By default, WordPress converts a number of ASCII strings to strings
 * containing non-ASCII characters except inside a number of elements.
 * Both the list of these elements and the lists of conversions may be
 * customized.
 *
 * The `wptexturize()` function applies filters so as to short-circuit
 * it entirely by `add_filter( 'run_wptexturize', '__return_false' )`,
 * which can be used directly instead of the filter added below.
 *
 * To deactivate WPTexturize, set the return value below to '0'. Then,
 * using a Unicode-supporting keyboard layout gives full control as of
 * what a quotation mark or a dash is represented by in any particular
 * instance.
 *
 * This feature is based on code from The Web Flash.
 *
 * @link https://www.thewebflash.com/how-to-properly-disable-wptexturize-in-wordpress/
 */
add_filter( 'anrghg_wptexturize_active', function() { return '1'; } );



/**
 * Interoperability
 *
 * For support of custom post types, names of additional hooks
 * may be declared in the last filter of this section.
 */

/**
 * Internal CSS priority level
 *
 * This priority level matters as it determines the order relative to other
 * internal style elements. The higher the priority, the more the style element
 * is close to the start tag of the head element.
 *
 * The bigger the integer, the lower the priority. The biggest allowed value is
 * PHP_INT_MAX i.e. 2147483647.
 *
 * The Custom CSS also known as Theme Additional CSS, is expected to be able to
 * override the configured CSS. Yet it is output at priority level 101. Hence,
 * the CSS as configured in the settings needs to be output at higher priority.
 * A priority level between 0 and 100 is recommended.
 *
 * '-1': Highest priority;
 * '0':  Input the priority level as an integer;
 * '1':  Lowest priority:
 */
add_filter( 'anrghg_css_priority_select', function() { return '0'; } );

/**
 * Internal CSS priority input
 *
 * This value may be any integer between '-2147483648' and '2147483647'.
 *
 * However, negative values are unsafe, and so are values from 0 to 8, in that
 * priority higher than 9 (from 8 downwards) for Notes and sources causes image
 * and list blocks to disappear on public pages.
 *
 * So the safe range is 9…2×10⁹, while the possible range is −2×10⁹…2×10⁹.
 */
add_filter( 'anrghg_css_priority_input', function() { return '3'; } );

/**
 * Line-wrap long URLs
 *
 * Allows to line-wrap URLs anywhere.
 *
 * Applied to URLs displayed in notes, sources or references.
 *
 * This prevents long URLs from hanging out of tooltips, and
 * prevents lists from being expanded beyond the window edge.
 *
 * '1': URLs may line wrap anywhere;
 * '0': Supporting browsers may break at slashes:
 */
add_filter( 'anrghg_url_wrap', function() { return '1'; } );

/**
 * Allow HTML in term (category, tag) descriptions
 *
 * Many plugins, including Yoast SEO, are working around the same
 * limitation.
 *
 * '1': Term descriptions may contain HTLM tags;
 * '0': Tags are deleted in term descriptions:
 */
add_filter( 'anrghg_allow_html_term_description', function() { return '1'; } );

/**
 * Activate Elementor test mode
 *
 * Elementor wraps elements into divs, preventing appended content
 * from displaying correctly.
 *
 * Automated Elementor integration means removing and readding the
 * markup at the end, so that added content will be nested.
 *
 * A test facility helps with sandboxing the process.
 *
 * '1': Test markup is added.
 * '0': No test markup.
 */
add_filter( 'anrghg_activate_elementor_test_mode', function() { return '0'; } );

/**
 * Filter ACF wysiwyg field content
 *
 * The Advanced Custom Fields plugin applies filters added to the
 * 'acf_the_content' hook in wysiwyg fields.
 *
 * However, processing complements in every single field separately
 * may not be desired.
 *
 * '1': Fields are processed individually;
 * '0': Fields may be processed as part of other content:
 */
add_filter( 'anrghg_filter_acf_the_content_hook', function() { return '1'; } );

/**
 * Support alternative content hooks
 *
 * The value is a comma-separated list of hooks allowing to apply
 * filters for the content, e.g. of a custom post, or a feature.
 * Line breaks and spaces are ignored.
 *
 * The following hooks are already supported:
 * the_content, term_description, pum_popup_content,
 * sgpbSubscriptionForm, anrghg_content_filter_hook
 */
add_filter( 'anrghg_additional_content_hooks', function() { return ''; } );



/**
 * User experience
 *
 * Used across several features, these settings are grouped together for prominence.
 */

/**
 * CSS smooth scrolling
 *
 * This scrolling behavior enhancement works purely by CSS, without any JavaScript.
 *
 * '1': Scrolling is smooth by CSS;
 * '0': Scrolling is immediate:
 */
add_filter( 'anrghg_css_smooth_scrolling', function() { return '0'; } );

/**
 * CSS scroll offset
 *
 * This scrolling behavior enhancement works purely by CSS, without any JavaScript.
 * Configured in pixels for stability, rather than viewport height or font height.
 *
 * Unit: pixels
 */
add_filter( 'anrghg_css_scroll_offset', function() { return '115'; } );

/**
 * General mobile breakpoint
 *
 * This configuration is for general use, while Tooltip layout has its own.
 *
 * The most common screen width breakpoints in portrait orientation include:
 *     360px
 *     375px
 *     414px
 *     768px
 *     864px
 *    1080px
 *
 * Unit: pixels
 */
add_filter( 'anrghg_general_mobile_breakpoint', function() { return '768'; } );

/**
 * List wrapper margin top and bottom
 *
 * These values in pixels are applied to all lists as of the table of contents,
 * the note or source lists and the standalone reference list.
 *
 * Unit: pixels
 */
add_filter( 'anrghg_list_wrapper_margin_top', function() { return '0'; } );
add_filter( 'anrghg_list_wrapper_margin_bottom', function() { return '0'; } );



/**
 * Customization
 *
 * Custom CSS must not be supported here, but the Theme Customizer helps with adding Custom CSS.
 * Alternatively, a Child Theme’s `style.css` is a great place to add Custom CSS.
 */

/**
 * Load web fonts
 *
 * Load the web fonts configured below.
 *
 * '1': These fonts are loaded on public pages;
 * '0': No web fonts are loaded:
 */
add_filter( 'anrghg_web_fonts_active', function() { return '0'; } );

/**
 * Web fonts
 *
 * Many webfonts are available on Google Fonts.
 * https://fonts.google.com/
 *
 * The format is a semicolon-separated list of URLs.
 */
add_filter( 'anrghg_web_font_urls', function() { return 'https://fonts.googleapis.com/css?family=Titillium+Web:regular,bold,italic,bolditalic'; } );

/**
 * Use the URL slug as a CSS selector
 *
 * After activating this feature (set to '1'), you may use the slug of
 * any page or post as a class of the body element in CSS style rules.
 *
 * NOTE: Slugs starting with a digit will be prepended with
 * an underscore to make valid CSS class names out of them.
 *
 * CAUTION: Two posts or pages may happen to have the same slug. These
 * will be applied the same style rules if defined using the slug. The
 * problem cannot be addressed by prepending generic strings, while no
 * prepended strings means easier, more straightforward selectors. For
 * pages or posts with identical slugs but differing requirements, the
 * number should be used. It is a body class by default, and is unique
 * across posts and pages. However, to make a valid CSS class name out
 * of it, WordPress prepends a string:
 *
 * - Posts: Prepend `postid-`  to the number (with one hyphen);
 * - Pages: Prepend `page-id-` to the number (with two hyphens).
 *
 * '1': The slug is a class name;
 * '0': The slug cannot be used as a CSS selector:
 */
add_filter( 'anrghg_slug_body_class_active', function() { return '0'; } );

/**
 * Prefix for invalid class names
 *
 * https://www.w3.org/International/questions/qa-escapes
 *
 * “In CSS, identifiers (including element names, classes, and IDs in selectors)
 * can contain only the characters [a-zA-Z0-9] and ISO 10646 characters U+00A0 and
 * higher, plus the hyphen (-) and the underscore (_); they cannot start with a digit,
 * two hyphens, or a hyphen followed by a digit. Identifiers can also contain escaped
 * characters and any ISO 10646 character as a numeric code (see next item).
 * For instance, the identifier "B&W?" may be written as "B\&W\?" or "B\26 W\3F".
 *
 * https://www.w3.org/TR/CSS21/syndata.html#characters
 *
 * Please use only ASCII letters and/or underscore.
 * An empty value will not fall back to underscore.
 * That behavior is intended for test purposes.
 */
add_filter( 'anrghg_slug_body_class_prefix', function() { return '_'; } );



/**
 * Include HTML partials
 *
 * The content of a locally stored file is included in the page where an empty
 * div stands whose class is at least “wp-block-anrghg-include”. The div has a
 * “data-path” attribute pointing to a file stored on the server. This content
 * may be bigger than what WordPress can save in a Custom HTML block. Included
 * content may be updated in bulk by replacing the files via FTP.
 */

/**
 * File path
 *
 * The start of the file path can be configured here for all relative paths set
 * up in the “Include partial” blocks. Absolute paths can still be input there.
 *
 * In shared hosting, the absolute path typically starts with “/home/” followed
 * by the name of the hosting account as found in the account’s File Manager.
 *
 * Even when stored in the “public_html/” folder, WordPress could not embed the
 * files using any of the included or suggested blocks.
 */
add_filter( 'anrghg_include_base_directory', function() { return '/'; } );

/**
 * Placeholder for the classes
 *
 * This placeholder may occur in 0, 1, or multiple instances in the content of
 * the included file. Its value can be set in the “Additional CSS classes” box
 * in the “Advanced” section of the Block Inspector.
 */
add_filter( 'anrghg_include_classes_placeholder', function() { return '{{{anrghg-classes}}}'; } );

/**
 * Placeholder for the value
 *
 * This placeholder may occur in 0, 1, or multiple instances in the content of
 * the included file. Its value can be set in the “Value” input field that may
 * be in the “Include partial” block or in the Block Inspector.
 */
add_filter( 'anrghg_include_value_placeholder', function() { return '{{{anrghg-value}}}'; } );

/**
 * Security HTML filter
 *
 * If this setting is on, only whitelisted HTML tags and attributes are output
 * in the post or page, thanks to filtering the file content using an extended
 * KSES filter documented in the file `includes/filtered.php`.
 *
 * '1': The file content is filtered for security;
 * '0': The file content remains unfiltered:
 */
add_filter( 'anrghg_include_html_filter_active', function() { return '1'; } );



/**
 * Excerpts
 *
 * Since notes and sources are not delimited by shortcodes lest severe
 * limitations affecting usability and interoperability, the automatic
 * excerpts generated by WordPress are not automatically fixed, and an
 * extra feature is required to generate auto excerpts.
 */

/**
 * Clean auto excerpts
 *
 * This setting’s purpose is to turn off redesigned automatic excerpts.
 * For any eventuality, keeping default auto excerpts is possible.
 *
 * '1': Excerpts are re-generated properly;
 * '0': Default excerpt generation applies:
 */
add_filter( 'anrghg_clean_auto_excerpts', function() { return '1'; } );

/**
 * Filter automatic excerpts
 *
 * Applies `the_content` filters to automatic excerpts.
 * These may be applied after removing notes and sources.
 *
 * '1': Content filters are applied;
 * '0': The excerpt stays unfiltered:
 */
add_filter( 'anrghg_apply_the_content_auto_excerpts', function() { return '0'; } );

/**
 * Filter manual excerpts
 *
 * Applies `the_content` filters to manual excerpts.
 * This is required in case a manual excerpt contains
 * a note or source, which may occur for some purpose.
 *
 * '1': Content filters are applied;
 * '0': The excerpt stays unfiltered:
 */
add_filter( 'anrghg_apply_the_content_manual_excerpts', function() { return '1'; } );



/**
 * Thank You message
 *
 * A text box is optionally displayed at the end of the posts.
 * It may also display with another content at the end of pages.
 *
 * The message may be configured in the template editor and inserted
 * with the same syntax, simple or complex, usually just by its name.
 *
 * This feature is based on code from Justin Busa.
 *
 * @link https://www.wpbeaverbuilder.com/creating-wordpress-plugin-easier-think/
 * (Originally it was designed as an example plugin and targeted posts.)
 */

/**
 * Activation and scope
 *
 * Both are united in this switch.
 *
 * '1': Append a message to posts only;
 * '2': Append a message to pages only;
 * '3': Append one message to posts and another one to pages;
 * '0': Deactivate this feature:
 */
add_filter( 'anrghg_thank_you_active', function() { return '0'; } );

/**
 * Display on home page
 *
 * '1': The message displays even when the post is the home page;
 * '0': The message is hidden on any page with home page status:
 */
add_filter( 'anrghg_thank_you_display_on_home', function() { return '0'; } );

/**
 * Your message at the end of posts
 *
 * The %s placeholder will be replaced with the post title.
 *
 * HTML markup is supported. For a rich text editing experience, please
 * configure the text in the template editor and insert its name here.
 * The name of a reusable complement will be replaced with that text if
 * it is alone or comes first or last, or is bracketed by delimiters as
 * configured.
 *
 * The CSS selector is `div.anrghg_post_thanks p`
 */
add_filter( 'anrghg_thank_you_content', function() { return 'Thank you for reading “<em>%s</em>”!'; } );

/**
 * Your message at the end of pages
 *
 * The %s placeholder will be replaced with the page title.
 *
 * Configuration and formatting like for posts.
 *
 * The CSS selector is `div.anrghg_page_thanks p`
 */
add_filter( 'anrghg_thank_you_content_page', function() { return 'Thank you for reading this page!'; } );

/**
 * Template selection in Post Meta box
 *
 * The templates in this list are the options of a select box.
 *
 * Format: Space-separated enumeration or newline-separated list
 *         of template names.
 */
add_filter( 'anrghg_thank_you_select_list', function() { return ''; } );

/**
 * Default style in Block select box
 *
 * This adds a class to the message box instance.
 *
 * Values: 1..9 or 0 for styles 1..10, or empty.
 */
add_filter( 'anrghg_thank_you_default_style', function() { return ''; } );

/**
 * Thank You message processing priority level
 *
 * This priority level matters as it determines the order relative to
 * other features appended by this or other plugins.
 *
 * The bigger the integer, the lower the priority. The biggest allowed value is
 * PHP_INT_MAX i.e. 2147483647.
 *
 * '-1': Highest priority;
 * '0':  Input the priority level as an integer;
 * '1':  Lowest priority:
 */
add_filter( 'anrghg_thank_you_priority_select', function() { return '0'; } );

/**
 * Thank You message processing priority input
 *
 * This value may be any integer between '-2147483648' and '2147483647'.
 *
 * However, negative values are unsafe, and so are values from 0 to 8, in that
 * priority higher than 9 (from 8 downwards) for Notes and sources causes image
 * and list blocks to disappear on public pages.
 *
 * So the safe range is 9…2×10⁹, while the possible range is −2×10⁹…2×10⁹.
 */
add_filter( 'anrghg_thank_you_priority_input', function() { return '10'; } );



/**
 * Aspect (Thank You message)
 */

/**
 * Font size
 *
 * The font size has 4 options:
 *  '0': inherit;
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_thank_you_font_size_option', function() { return '1'; } );
add_filter( 'anrghg_thank_you_font_size_px', function() { return '15'; } );
add_filter( 'anrghg_thank_you_font_size_em', function() { return '1.5'; } );
add_filter( 'anrghg_thank_you_font_size_rem', function() { return '1.5'; } );

/**
 * Colors
 *
 * Foreground and background colors.
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_thank_you_foreground_color', function() { return '#000000'; } );
add_filter( 'anrghg_thank_you_background_color', function() { return '#FFFFFF'; } );

/**
 * Border
 *
 * Width:  Pixels.
 * Style:  Keyword solid,dotted,dashed,double,inset,outset,ridge,groove,none,hidden.
 * Color:  Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 * Radius: Pixels.
 */
add_filter( 'anrghg_thank_you_border_width', function() { return '1'; } );
add_filter( 'anrghg_thank_you_border_style', function() { return 'solid'; } );
add_filter( 'anrghg_thank_you_border_radius', function() { return '2'; } );
add_filter( 'anrghg_thank_you_border_color', function() { return '#00FF00'; } );

/**
 * Shadow
 *
 * X-Offset: Pixels.
 * Y-Offset: Pixels.
 * Blur:     Pixels.
 * Spread:   Pixels.
 * Color: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_thank_you_shadow_x_offset', function() { return '-5'; } );
add_filter( 'anrghg_thank_you_shadow_y_offset', function() { return '7'; } );
add_filter( 'anrghg_thank_you_shadow_blur', function() { return '5'; } );
add_filter( 'anrghg_thank_you_shadow_spread', function() { return '2'; } );
add_filter( 'anrghg_thank_you_shadow_color', function() { return '#484848'; } );

/**
 * Padding
 *
 * The order is intuitive instead of geometric like in CSS.
 *
 * Unit: Pixels.
 */
add_filter( 'anrghg_thank_you_padding_top', function() { return '20'; } );
add_filter( 'anrghg_thank_you_padding_start', function() { return '24'; } );
add_filter( 'anrghg_thank_you_padding_end', function() { return '24'; } );
add_filter( 'anrghg_thank_you_padding_bottom', function() { return '20'; } );

/**
 * Margin
 *
 * The order is intuitive instead of geometric like in CSS.
 *
 * Unit: Pixels.
 */
add_filter( 'anrghg_thank_you_margin_top', function() { return '50'; } );
add_filter( 'anrghg_thank_you_margin_start', function() { return '16'; } );
add_filter( 'anrghg_thank_you_margin_end', function() { return '16'; } );
add_filter( 'anrghg_thank_you_margin_bottom', function() { return '50'; } );



/**
 * Date information
 *
 * The published and/or last modified dates are appended or prepended
 * to the post or page. Consistently with current practice, both dates
 * are link text of the permalink, and a tooltip shows the time.
 *
 * This feature is based on code from Shaun Quarton.
 *
 * @link https://pagely.com/blog/display-post-last-updated-wordpress/
 */

/**
 * This is the main switch. Effectiveness depends on the next 8 switches
 *
 * All these settings are '0' or '1':
 * '1': Modified and/or published date may be added;
 * '0': Modified and/or published date cannot be added:
 */
add_filter( 'anrghg_dates_active', function() { return '0'; } );

/**
 * '1': Add the last-modified date at the beginning of posts
 * (For posts, the last modified date information may add below the already
 * present published date):
 */
add_filter( 'anrghg_dates_post_top_modif', function() { return '1'; } );

/**
 * '1': Add the published date at the beginning of posts:
 */
add_filter( 'anrghg_dates_post_top_publi', function() { return '0'; } );

/**
 * '1': Add the last-modified date at the end of posts:
 */
add_filter( 'anrghg_dates_post_end_modif', function() { return '0'; } );

/**
 * '1': Add the published date at the end of posts:
 */
add_filter( 'anrghg_dates_post_end_publi', function() { return '0'; } );

/**
 * '1': Add the last-modified date at the beginning of pages:
 */
add_filter( 'anrghg_dates_page_top_modif', function() { return '0'; } );

/**
 * '1': Add the published date at the beginning of pages:
 */
add_filter( 'anrghg_dates_page_top_publi', function() { return '0'; } );

/**
 * '1': Add the last-modified date at the end of pages:
 */
add_filter( 'anrghg_dates_page_end_modif', function() { return '1'; } );

/**
 * '1': Add the published date at the end of pages:
 */
add_filter( 'anrghg_dates_page_end_publi', function() { return '1'; } );

/**
 * The order when both dates are added in the same place
 *
 * Since a freely configurable ‘Published first’ information can be added,
 * the chronological order configuration is more fine-grained: top/bottom,
 * post/page. Chronological order is activated/deactivatable individually.
 *
 * '1': Published date first, last-modified date second (chronological order);
 * '0': Last-modified date first, published date second (anti-chronological order);
 */
add_filter( 'anrghg_dates_post_top_chrono', function() { return '0'; } );
add_filter( 'anrghg_dates_post_end_chrono', function() { return '1'; } );
add_filter( 'anrghg_dates_page_top_chrono', function() { return '0'; } );
add_filter( 'anrghg_dates_page_end_chrono', function() { return '1'; } );

/**
 * Whether to use unified labels or labels specifically tailored to the instance
 *
 * '1': Use unified, general labels;
 * '0': Use labels specifically tailored to the instance:
 */
add_filter( 'anrghg_dates_label_uni', function() { return '1'; } );

/**
 * The unified, general label for all instances of last-modified date:
 *
 * All these labels require the placeholder %s to insert the date
 * in the accurate place with respect to internationalization.
 */
add_filter( 'anrghg_dates_label_modified', function() { return 'Last modified: %s'; } );

/**
 * The unified, general label for all instances of published date:
 */
add_filter( 'anrghg_dates_label_published', function() { return 'Published: %s'; } );

/**
 * The specific label of the last-modified date at the beginning of posts:
 */
add_filter( 'anrghg_dates_label_post_top_modif', function() { return 'Post last modified: %s'; } );

/**
 * The specific label of the published date at the beginning of posts:
 */
add_filter( 'anrghg_dates_label_post_top_publi', function() { return 'Post published: %s'; } );

/**
 * The specific label of the last-modified date at the end of posts:
 */
add_filter( 'anrghg_dates_label_post_end_modif', function() { return 'This post was last modified on %s'; } );

/**
 * The specific label of the published date at the end of posts:
 */
add_filter( 'anrghg_dates_label_post_end_publi', function() { return 'This post was published on %s'; } );

/**
 * The specific label of the last-modified date at the beginning of pages:
 */
add_filter( 'anrghg_dates_label_page_top_modif', function() { return 'Page last modified: %s'; } );

/**
 * The specific label of the published date at the beginning of pages:
 */
add_filter( 'anrghg_dates_label_page_top_publi', function() { return 'Page published: %s'; } );

/**
 * The specific label of the last-modified date at the end of pages:
 */
add_filter( 'anrghg_dates_label_page_end_modif', function() { return 'This page was last modified on %s'; } );

/**
 * The specific label of the published date at the end of pages:
 */
add_filter( 'anrghg_dates_label_page_end_publi', function() { return 'This page was published on %s'; } );

/**
 * Dates label processing priority level
 *
 * This priority level matters as it determines the order relative to
 * other features appended by this or other plugins.
 *
 * The bigger the integer, the lower the priority. The biggest allowed value is
 * PHP_INT_MAX i.e. 2147483647.
 *
 * '-1': Highest priority;
 * '0':  Input the priority level as an integer;
 * '1':  Lowest priority:
 */
add_filter( 'anrghg_dates_priority_select', function() { return '0'; } );

/**
 * Dates label processing priority input
 *
 * This value may be any integer between '-2147483648' and '2147483647'.
 *
 * However, negative values are unsafe, and so are values from 0 to 8, in that
 * priority higher than 9 (from 8 downwards) for Notes and sources causes image
 * and list blocks to disappear on public pages.
 *
 * So the safe range is 9…2×10⁹, while the possible range is −2×10⁹…2×10⁹.
 */
add_filter( 'anrghg_dates_priority_input', function() { return '1500'; } );



/**
 * Aspect at post top (Date information)
 */

/**
 * Text align
 *
 * Values:
 * *  Writing direction sensitive: 'start', 'end'.
 * *  Stable across locales: 'left', 'center', 'right'.
 */
add_filter( 'anrghg_dates_post_top_text_align', function() { return 'start'; } );

/**
 * Margin above and margin below
 *
 * Unit: pixels.
 */
add_filter( 'anrghg_dates_post_top_margin_above', function() { return '-30'; } );
add_filter( 'anrghg_dates_post_top_margin_below', function() { return '50'; } );

/**
 * Font size
 *
 * The font size has 4 options:
 *  '0': inherit;
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_dates_post_top_font_size_option', function() { return '1'; } );
add_filter( 'anrghg_dates_post_top_font_size_px', function() { return '14'; } );
add_filter( 'anrghg_dates_post_top_font_size_em', function() { return '1.4'; } );
add_filter( 'anrghg_dates_post_top_font_size_rem', function() { return '1.4'; } );

/**
 * Label color
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_dates_post_top_color', function() { return '#595959'; } );



/**
 * Aspect at page top (Date information)
 */

/**
 * Text align
 *
 * Values:
 * *  Writing direction sensitive: 'start', 'end'.
 * *  Stable across locales: 'left', 'center', 'right'.
 */
add_filter( 'anrghg_dates_page_top_text_align', function() { return 'start'; } );

/**
 * Margin above and margin below
 *
 * Unit: pixels.
 */
add_filter( 'anrghg_dates_page_top_margin_above', function() { return '-30'; } );
add_filter( 'anrghg_dates_page_top_margin_below', function() { return '50'; } );

/**
 * Font size
 *
 * The font size has 4 options:
 *  '0': inherit;
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_dates_page_top_font_size_option', function() { return '1'; } );
add_filter( 'anrghg_dates_page_top_font_size_px', function() { return '14'; } );
add_filter( 'anrghg_dates_page_top_font_size_em', function() { return '1.4'; } );
add_filter( 'anrghg_dates_page_top_font_size_rem', function() { return '1.4'; } );

/**
 * Label color
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_dates_page_top_color', function() { return '#595959'; } );



/**
 * Aspect at post end (Date information)
 */

/**
 * Text align
 *
 * Values:
 * *  Writing direction sensitive: 'start', 'end'.
 * *  Stable across locales: 'left', 'center', 'right'.
 */
add_filter( 'anrghg_dates_post_end_text_align', function() { return 'start'; } );

/**
 * Margin above and margin below
 *
 * Unit: pixels.
 */
add_filter( 'anrghg_dates_post_end_margin_above', function() { return '-30'; } );
add_filter( 'anrghg_dates_post_end_margin_below', function() { return '50'; } );

/**
 * Font size
 *
 * The font size has 4 options:
 *  '0': inherit;
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_dates_post_end_font_size_option', function() { return '1'; } );
add_filter( 'anrghg_dates_post_end_font_size_px', function() { return '14'; } );
add_filter( 'anrghg_dates_post_end_font_size_em', function() { return '1.4'; } );
add_filter( 'anrghg_dates_post_end_font_size_rem', function() { return '1.4'; } );

/**
 * Label color
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_dates_post_end_color', function() { return '#595959'; } );



/**
 * Aspect at page end (Date information)
 */

/**
 * Text align
 *
 * Values:
 * *  Writing direction sensitive: 'start', 'end'.
 * *  Stable across locales: 'left', 'center', 'right'.
 */
add_filter( 'anrghg_dates_page_end_text_align', function() { return 'start'; } );

/**
 * Margin above and margin below
 *
 * Unit: pixels.
 */
add_filter( 'anrghg_dates_page_end_margin_above', function() { return '-30'; } );
add_filter( 'anrghg_dates_page_end_margin_below', function() { return '50'; } );

/**
 * Font size
 *
 * The font size has 4 options:
 *  '0': inherit;
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_dates_page_end_font_size_option', function() { return '1'; } );
add_filter( 'anrghg_dates_page_end_font_size_px', function() { return '14'; } );
add_filter( 'anrghg_dates_page_end_font_size_em', function() { return '1.4'; } );
add_filter( 'anrghg_dates_page_end_font_size_rem', function() { return '1.4'; } );

/**
 * Label color
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_dates_page_end_color', function() { return '#595959'; } );



/**
 * Date meta tags
 *
 * To palliate any lack of last modified date and/or published date
 * meta tags, parsed by search engines and bibliography software, a
 * meta tag showing the date and time when the post was last edited
 * or when it was published, or both, may be added in any of common
 * or Open Graph protocol.
 */

/**
 * Activation
 *
 * '1': Activate;
 * '0': Deactivate:
 */
add_filter( 'anrghg_date_meta_tags_active', function() { return '0'; } );

/**
 * Configuration of individual tags
 *
 * Common protocol example:
 * <meta name="date" content="2022-01-02T01:59:18+0000" />
 * <meta name="last-modified" content="2022-01-02T01:59:18+0000" />
 *
 * Open Graph protocol example:
 * <meta property="article:published_time" content="2022-01-02T01:59:18+0000" />
 * <meta property="article:modified_time" content="2022-01-02T01:59:18+0000" />
 */
add_filter( 'anrghg_date_meta_common_last_edit', function() { return '1'; } );
add_filter( 'anrghg_date_meta_open_g_last_edit', function() { return '0'; } );
add_filter( 'anrghg_date_meta_common_published', function() { return '1'; } );
add_filter( 'anrghg_date_meta_open_g_published', function() { return '0'; } );



/**
 * Paragraph links
 *
 * This feature adds fragment identifiers to paragraphs, prepends clickable
 * extra elements (not part of the text stream) and thus helps share direct
 * links more fine-grained and precisely than table of contents can provide
 * as they target headings only. The identifier is available in the link on
 * a character that is prepended visually only. List items are also covered
 * but no blockquotes (since paragraphs are used inside the blockquotes).
 *
 * Purple Numbers were the original paragraph IDs by Douglas Engelbart, and
 * the name was given by his daughter looking at the purple-colored numbers
 * appended to the paragraphs. To mitigate the impact of continuous updates
 * on identifier stability, these new IDs are based on the content and span
 * the first 200 characters (stopping at the last space). Identical strings
 * are disambiguated numerically (applying the scheme used for headings).
 */

/**
 * The switch to turn this feature on and off
 *
 * '1':  Add fragment IDs to paragraphs;
 * '0':  Deactivate this feature:
 */
add_filter( 'anrghg_paragraph_links_active', function() { return '0'; } );

/**
 * Symbol
 *
 * This is the prepended character used as link text for the paragraph link
 *
 * The input may be a Unicode character, HTML entity or numeric character reference.
 * The character is prepended visually only, not in the text stream.
 *
 * Suggestions: ¶, §, 🔗 (U+1F517).
 *
 * Full list supported in select box:
 * ¶ (U+00B6), ⁋ (U+204B), ❡ (U+2761), ⸿ (U+2E3F), ǁ (U+01C1), ‖ (U+2016), ∥ (U+2225),
 * ፠ (U+1360), ፨ (U+1368), ※ (U+203B), ⋇ (U+22C7), ⁜ (U+205C), 🔗 (U+1F517),
 * § (U+00A7), ∷ (U+2237), ⸪ (U+2E2A), ⸫ (U+2E2B), ⸬ (U+2E2C), ⸭ (U+2E2D), ⁘ (U+2058),
 * ⁙ (U+2059), ⁚ (U+205A), ⁛ (U+205B), ⁝ (U+205D), ⁞ (U+205E), ▶ (U+25B6), ◀ (U+25C0)
 */
add_filter( 'anrghg_paragraph_link_character_input', function() { return '¶'; } );

/**
 * Plain tooltip activation
 *
 * '1': Plain tooltip on hovering a link;
 * '0': No information about paragraph links:
 */
add_filter( 'anrghg_paragraph_link_plain_tooltip_active', function() { return '1'; } );

/**
 * Plain tooltip text
 *
 * If this happens to be empty or to consist of non-printable characters
 * only as trimmed by PHP, no such tooltips will be added to the markup.
 */
add_filter( 'anrghg_paragraph_link_plain_tooltip_text', function() { return 'Permalink to this fragment'; } );

/**
 * ID maximum length
 *
 * This setting overrides a similar one in the Localization section.
 * Content-derived fragment IDs are cropped to the latest space.
 * With a length set to zero, the IDs are entirely numeric.
 *
 * Unit: number of characters
 */
add_filter( 'anrghg_paragraph_identifier_max_length', function() { return '80'; } );



/**
 * Heading links
 *
 * Except when containing complements, headings are used as link text
 * of their fragment identifier and so link to themselves, not to the
 * table of contents item of the respective heading, that should also
 * be linked to, but separately, from the CSS counter heading number.
 *
 * The optional table of contents is independent of the heading links
 * and may be uncollapsible or collapsible, and then either collapsed
 * or expanded at page load. This behavior is configurable at various
 * levels: globally, in the post meta box, in the block inspector, or
 * manually in the positioner code.
 */

/**
 * Heading links activation
 *
 * The heading links activation is independent of the table of contents.
 *
 * '1': Heading links;
 * '0': Deactivate this feature:
 */
add_filter( 'anrghg_heading_links_active', function() { return '0'; } );

/**
 * Plain tooltip activation
 *
 * '1': Plain tooltip on hovering a link;
 * '0': No information about heading links:
 */
add_filter( 'anrghg_heading_link_plain_tooltip_active', function() { return '1'; } );

/**
 * Plain tooltip text
 *
 * If this happens to be empty or to consist of non-printable characters
 * only as trimmed by PHP, no such tooltips will be added to the markup.
 */
add_filter( 'anrghg_heading_link_plain_tooltip_text', function() { return 'Permalink to this heading'; } );



/**
 * Table of contents
 *
 * Except when containing complements, headings are used as link text
 * of their fragment identifier and so link to themselves, not to the
 * table of contents item of the respective heading, that should also
 * be linked to, but separately, from the CSS counter heading number.
 *
 * The optional table of contents is independent of the heading links
 * and may be uncollapsible or collapsible, and then either collapsed
 * or expanded at page load. This behavior is configurable at various
 * levels: globally, in the post meta box, in the block inspector, or
 * manually in the positioner code.
 */

/**
 * Table of contents activation
 *
 * This switch has only two positions because fully deactivating
 * the feature is pointless (and, in multisite networks, buggy).
 *
 * The table may be inserted automatically if enough headings
 * are present, or only on request.
 *
 * The request may be configured in the Post Meta box, or by
 * inserting the block or a positioner code in the article.
 *
 *  '1': Always show the table of contents if applicable;
 * '-1': Insert a table of contents only on request:
 */
add_filter( 'anrghg_table_of_contents_active', function() { return '-1'; } );

/**
 * Heading number position
 *
 * The heading numbering has 3 options too, because beyond
 * being added, heading numbers may not only be prepended,
 * but appended as an alternative with less layout impact.
 * Anyway these numbers are generated by CSS counters, and
 * they are not selectable.
 *
 * '-1': Prepended;
 *  '1': Appended:
 *  '0': None, the backlink text is a generic arrow;
 */
add_filter( 'anrghg_heading_number_position', function() { return '1'; } );

/**
 * Backlink plain tooltip activation
 *
 * '1': Plain tooltip on hovering a link;
 * '0': No information about heading links:
 */
add_filter( 'anrghg_heading_backlink_plain_tooltip_active', function() { return '1'; } );

/**
 * Backlink plain tooltip text
 *
 * If this happens to be empty or to consist of non-printable characters
 * only as trimmed by PHP, no such tooltips will be added to the markup.
 */
add_filter( 'anrghg_heading_backlink_plain_tooltip_text', function() { return 'Link to this heading in the table of contents'; } );

/**
 * Table of contents alignment
 *
 * This setting is optional and as such accepts an empty value.
 *
 * '-1': Left;
 *  '0': Center;
 *  '1': Right;
 *   '': Undefined:
 */
add_filter( 'anrghg_table_of_contents_alignment', function() { return ''; } );

/**
 * Table of contents label
 *
 * The table’s label may be blank. Also, collapsible tables get a twistie appended.
 */
add_filter( 'anrghg_table_of_contents_label', function() { return 'Table of contents'; } );

/**
 * The minimum number of headings for the table of contents:
 */
add_filter( 'anrghg_table_of_contents_min_number', function() { return '2'; } );

/**
 * Table of contents depth
 *
 * The meaning of the digit is that it represents the digit used in
 * the lowest heading level tag name. '6' displays (h1 and) h2..h6.
 *
 * '6' lists all headings (recommended):
 */
add_filter( 'anrghg_table_of_contents_depth', function() { return '6'; } );

/**
 * Collapsible behavior and collapsed state
 *
 * Expanding and collapsing may be triggered by clicking the table of
 * contents label or the twistie next to it, without JavaScript. That
 * toggle may also be actioned by clicking a heading backlink, at the
 * condition that JavaScript is turned on. JavaScript is also used in
 * the AMP `toggleChecked()` action involved in this process. Without
 * JavaScript, only the target item displays, and expanding the table
 * takes another click.
 *
 * '1':  Collapsed when the page loads, expands on click;
 * '-1': Displays expanded on load, collapsible on click;
 * '0':  Always displays in full length, cannot collapse:
 */
add_filter( 'anrghg_table_of_contents_collapsing', function() { return '1'; } );

/**
 * Default position in the absence of a positioner
 *
 * '1':  At the top of the article just below the title;
 * '0':  Before the first heading;
 * '-1': Appended at the bottom:
 */
add_filter( 'anrghg_table_of_contents_position', function() { return '0'; } );

/**
 * Table of contents configurable positioner
 *
 * As a positioner, this is useful when none of the default positions
 * is convenient.
 *
 * This is only the code name; the square brackets are mandatory.
 * Please bracket this string whenever inserting it: [anrghg_toc]
 *
 * The Block Editor has a Table of contents block to automatically
 * insert a positioner code if the feature is active.
 *
 * Argument names are preceded by a space and start with an underscore.
 * Values are delimited by vertical bars.
 * The equals sign may or may not be space-padded.
 *
 * Label tailored to the instance: _1=|Contents of ‘%s’|,
 * where %s is replaced with the post title (for tables after the post).
 *
 * Alignment: _2=|0| or _2=|center|, or _2=|-1| or |left|, or _2=|1| or |right|
 *
 * Collapsing behavior: _3=|-1| for expanded (and collapsible),
 * or _3=|1| for collapsed (and expandable), or _3=|0| for uncollapsible.
 */
add_filter( 'anrghg_table_of_contents_positioner_name', function() { return 'anrghg_toc'; } );

/**
 * Heading URL ID prefix
 *
 * Required to disambiguate heading fragment identifiers in the post
 * and in the table of contents.
 *
 * Falls back to an underscore if empty.
 */
add_filter( 'anrghg_table_of_contents_heading_id_prefix', function() { return 't'; } );

/**
 * Top level heading font weight in the table of contents
 *
 * '1': bold;
 * '0': normal:
 */
add_filter( 'anrghg_table_of_contents_top_heading_bold', function() { return '1'; } );

/**
 * Show hierarchy by progressive indentation
 *
 * Each level is indented by one step of a number of pixels defined
 * next for desktop and for mobile.
 *
 * As level 1 headings in the article body are irregular, bad for SEO
 * and strongly discouraged, they are excluded from indentation and
 * would align with level 2 headings in the table of contents.
 *
 * '1': indented;
 * '0': aligned:
 */
add_filter( 'anrghg_table_of_contents_stepped_indentation', function() { return '1'; } );

/**
 * Indentation by level in pixels on desktop
 */
add_filter( 'anrghg_table_of_contents_desktop_indent_px', function() { return '22'; } );

/**
 * Indentation by level in pixels on mobile
 */
add_filter( 'anrghg_table_of_contents_mobile_indent_px', function() { return '7'; } );

/**
 * Exclude generated list labels from the table of contents.
 *
 * For the labels to be actually included, the table of contents’
 * priority level must be a greater figure than those of the features
 * that should have their labels included.
 *
 * This switch works with the ‘Complements as notes and sources’, and
 * the ‘Standalone reference lists’ features included in this plugin.
 *
 * '1': Those labels mustn’t show up in the table of contents.
 * '0': These labels may be included in the table of contents.
 */
add_filter( 'anrghg_table_of_contents_exclude_generated', function() { return '0'; } );

/**
 * Table of contents processing priority level
 *
 * This priority level matters as it determines the order relative to
 * other features appended by this or other plugins.
 *
 * The bigger the integer, the lower the priority. The biggest allowed value is
 * PHP_INT_MAX i.e. 2147483647.
 *
 * '-1': Highest priority;
 * '0':  Input the priority level as an integer;
 * '1':  Lowest priority:
 */
add_filter( 'anrghg_fragment_identifiers_priority_select', function() { return '0'; } );

/**
 * Table of contents processing priority input
 *
 * This value may be any integer between '-2147483648' and '2147483647'.
 *
 * However, negative values are unsafe, and so are values from 0 to 8, in that
 * priority higher than 9 (from 8 downwards) for Notes and sources causes image
 * and list blocks to disappear on public pages.
 *
 * So the safe range is 9…2×10⁹, while the possible range is −2×10⁹…2×10⁹.
 */
add_filter( 'anrghg_fragment_identifiers_priority_input', function() { return '1500'; } );



/**
 * Notes and sources
 *
 * This is not active by default either so as to not interfere with
 * other plugins processing only one kind of inline complements.
 * The MediaWiki CMS displays notes and references in two lists.
 *
 * NOTE: Two options about controlling the output of note lists and
 * reference lists in the footer are required before filters can be
 * used, and should be configured either on the settings page or in
 * the Post Meta box or in the Block Inspector, so as to have those
 * values stored in the database or with the post, and available at
 * the required moment in the page generation process.
 *
 * TECHNICAL NOTE: The settings page has an option for a predefined
 * set of safe delimiters and anoter one for easy-to-input strings,
 * but these are handled too early for being filtered.
 */

/**
 * Activation
 *
 * '1': Process both notes and sources as defined inline;
 * '0': Deactivate this feature:
 */
add_filter( 'anrghg_complements_active', function() { return '0'; } );

/**
 * Delimiter syntax error warning
 *
 *  '1': Display a warning in the presence of an unbalanced opening delimiter;
 * '-1': Output in that case a hidden warning visible in the page source only;
 *  '0': Deactivate this feature:
 */
add_filter( 'anrghg_complements_syntax_warning', function() { return '1'; } );

/**
 * Exclude posts and pages by post number
 *
 * The value is a comma-separated list of numbers of those posts and
 * pages where complements must not be processed.
 */
add_filter( 'anrghg_complements_excluded_posts', function() { return ''; } );

/**
 * Configure the string delimiting the start of a note text
 *
 * Suggestions:
 * - Easy input:   '{{{';
 * - Unambiguous:  '[note]';
 * - Free example: '[σημ]':
 */
add_filter( 'anrghg_note_start', function() { return '[note]'; } );

/**
 * Configure the string delimiting the end of a note text
 *
 * Suggestions:
 * - Easy input:   '}}}';
 * - Unambiguous:  '[/note]';
 * - Free example: '[/σημ]':
 */
add_filter( 'anrghg_note_end', function() { return '[/note]'; } );

/**
 * Configure the string delimiting the start of an end source text
 *
 * Suggestions:
 * - Easy input:   '[[[';
 * - Unambiguous:  '[src]';
 * - Free example: '[упом]':
 */
add_filter( 'anrghg_source_start', function() { return '[src]'; } );

/**
 * Configure the string delimiting the end of an end source text
 *
 * Suggestions:
 * - Easy input:   ']]]';
 * - Unambiguous:  '[/ref]';
 * - Free example: '[/упом]':
 */
add_filter( 'anrghg_source_end', function() { return '[/ref]'; } );

/**
 * Configure the string delimiting the start of a complement name
 *
 * Required when a reused complement is embedded rather than starting or ending.
 *
 * Suggestions:
 * - Easy input:   '[[';
 * - Unambiguous:  '[name]';
 * - Free example: '[이름]':
 */
add_filter( 'anrghg_complement_name_start', function() { return '[name]'; } );

/**
 * Configure the string delimiting the end of a complement name
 *
 * Required to end a new name and introduce a complement reusable in the post,
 * and when a reused complement is embedded rather than starting or ending.
 *
 * Suggestions:
 * - Easy input:   ']]';
 * - Unambiguous:  '[/name]';
 * - Free example: '[/이름]':
 */
add_filter( 'anrghg_complement_name_end', function() { return '[/ref]'; } );

/**
 * Use delimiters as configured in the Post Meta box
 *
 * Delimiters may be configured on a per-post basis, with the
 * benefit of flexibility. The prefills are as configured on
 * the settings page and may be edited by the post author.
 *
 * The downside is that the prefills cannot apply configuration
 * filters. Using these requires setting this value to '0' for
 * ‘false’ or ‘Those delimiters shall be ignored’.
 *
 * This filter template does not reflect the default value.
 */
add_filter( 'anrghg_complement_delimiters_use_post_meta', function() { return '0'; } );

/**
 * Previous delimiters
 *
 * If delimiters are in use that are no longer preferred, they
 * may be configured here, along with the ID of the first post
 * where the new delimiters as configured above will be used.
 *
 * Leave empty to skip any of these configurations.
 *
 * Tooltip-related previous delimiters may also be configured,
 * below under the title: * Previous delimiters for tooltips
 */
add_filter( 'anrghg_previous_delimiters_below_post_id', function() { return '0'; } );
add_filter( 'anrghg_previous_note_start', function() { return ''; } );
add_filter( 'anrghg_previous_note_end', function() { return ''; } );
add_filter( 'anrghg_previous_source_start', function() { return ''; } );
add_filter( 'anrghg_previous_source_end', function() { return ''; } );
add_filter( 'anrghg_previous_complement_name_start', function() { return ''; } );
add_filter( 'anrghg_previous_complement_name_end', function() { return ''; } );

/**
 * Automatically cut posts into sections using top-level subheadings
 *
 * The level of the top-level subheadings is determined automatically.
 *
 * '1': Each top-level subheading starts a new section from the second on.
 * '0': Subheadings do not affect how complements are processed.
 */
add_filter( 'anrghg_subheadings_as_section_dividers', function() { return '0'; } );

/**
 * Process complements in widgets
 *
 * Parts of the post, like accordion sections, may be widgets.
 *
 * '1': Each widget’s content is processed separately.
 * '0': The feature is deactivated.
 */
add_filter( 'anrghg_process_complements_in_widgets', function() { return '0'; } );

/**
 * Complement processing configurable section end delimiter
 *
 * Complements are processed until this code string and output in lists;
 * then complement processing resumes for output in the next set of lists.
 *
 * This may be any string in your script and language.
 *
 * This is only the code name; the square brackets are mandatory and are
 * supposed to be present. Please bracket this string whenever using it:
 * [/anrghg_section]
 *
 * The Block Editor has a Section end block to automatically insert a
 * positioner code if the feature is active.
 *
 * Arguments are supported. Argument names are preceded by a space and
 * start with an underscore. Values are delimited by vertical bars.
 * The equals sign may or may not be space-padded.
 *
 * List labels tailored to the instance: _11=|Label of the note list|,
 * _12=|Label of the source list|.
 *
 * Writing direction tailored to the instance: _21=|-1| in Note list,
 * _22=|-1| in Reference list, or _20=|-1| in both lists, where |-1|
 * is right-to-left, and |1| is left-to-right.
 *
 * Collapsing behavior tailored to the instance: _31=|-1| for Note list,
 * _32=|-1| for Reference list, or _30=|-1| for both lists, where -1 is
 * expanded (and collapsible), 1 is collapsed (and expandable), and 0 is
 * uncollapsible.
 *
 * Footer deferral tailored to the instance: _40=|1| or _40=|0| for whether
 * this instance must be deferred to the footer, or must not be deferred.
 */
add_filter( 'anrghg_complement_section_end_name', function() { return '/anrghg_section'; } );



/**
 * Anchors (Notes and sources)
 *
 * These anchors are sometimes referred to as referrers.
 */

/**
 * Numbering system
 *
 * '0': Western Arabic numerals;
 * '1': Eastern Arabic numerals;
 * '2': Uppercase Roman numerals;
 * '3': Lowercase Roman numerals;
 * '4': Uppercase Latin numerals;
 * '5': Lowercase Latin numerals:
 */
add_filter( 'anrghg_note_numbering_system', function() { return '5'; } );
add_filter( 'anrghg_source_numbering_system', function() { return '0'; } );

/**
 * Combine identical complements
 *
 * The assessment operates on the final complement because
 * even reusables may be completed with more text before or after.
 *
 * '1': Notes or sources with exactly the same text are combined (sectionwise).
 * '0': Each note or each source is numbered and listed individually.
 */
add_filter( 'anrghg_combine_identical_complements', function() { return '1'; } );

/**
 * Word joiner prefix
 *
 * The line may be broken in front of punctuation like opening parenthesis.
 * Starting the anchor with a word joiner solves this problem. Old systems
 * may not support the word joiner and display a .notdef box instead.
 * Therefore, adding a word joiner can be deactivated if unnecessary.
 * The word joiner U+2060 is an invisible character preventing a line break.
 *
 * '1': Word joiner is added.
 * '0': Word joiner is missing.
 */
add_filter( 'anrghg_complement_anchor_prefix_word_joiner', function() { return '1'; } );

/**
 * Anchor-bracketing characters
 *
 * Complement anchors may optionally be bracketed with distinctive strings
 * to differentiate the two sorts of anchors: notes, sources.
 *
 * Other options include prepending a letter or a word to note anchors, as
 * source anchors are often left unadorned.
 *
 * Adding paired punctuation is mandatory when anchors are not superscript
 * as they mostly are in print and on the web.
 */
add_filter( 'anrghg_note_anchor_prefix', function() { return '('; } );
add_filter( 'anrghg_note_anchor_suffix', function() { return ')'; } );
add_filter( 'anrghg_source_anchor_prefix', function() { return ''; } );
add_filter( 'anrghg_source_anchor_suffix', function() { return ''; } );

/**
 * ARIA labels of complement anchors
 *
 * For screen readers not to spell out a bare number out of context,
 * the anchor numbers as link text are ARIA-hidden, and a full label
 * is present to be read by screen readers instead. The placeholder,
 * required for internationalization to account for diverging usages
 * across locales, represents the note or source number.
 */
add_filter( 'anrghg_note_anchor_aria_label', function() { return 'Note %d anchor'; } );
add_filter( 'anrghg_source_anchor_aria_label', function() { return 'Reference %d anchor'; } );

/**
 * Complement anchor separator
 *
 * As complements may occur in series, with the next start delimiter
 * immediately following the preceding end delimiter, this character
 * is automatically inserted to separate adjacent anchors.
 */
add_filter( 'anrghg_adjacent_complement_anchor_separator', function() { return ','; } );

/**
 * Fragment identifier URL readability enhancements
 *
 * As each complement may be directly accessed on the web, through a
 * unique URL ending in its fragment identifier, according to widely
 * expected functionality, these URLs are potentially shared and are
 * exposed to the view. The following settings help with configuring
 * fragment identifiers for maximum readability and intuitivity.
 *
 * Note and source prefixes are optional. The anchor ID prefix is
 * being used for disambiguation, but its uniqueness is checked, and
 * fixed at runtime if necessary.
 *
 * Characters from all Unicode blocks are allowed, non-ASCII will be
 * percent-encoded by the browser.
 */
add_filter( 'anrghg_note_url_id_prefix', function() { return 'note'; } );
add_filter( 'anrghg_source_url_id_prefix', function() { return 'source'; } );
add_filter( 'anrghg_complement_anchor_url_id_prefix', function() { return 'a'; } );

/**
 * Anchor spacing
 *
 * Some styles may require spacing out the anchors.
 * These options add fixed-width padding or justifying space.
 *
 * '0': No spacing, close up;
 * '1': Add start padding as specified;
 * '2': Add a justifying space character in front.
 *
 * The unit of the padding is em.
 */
add_filter( 'anrghg_complement_anchor_spacing', function() { return '0'; } );
add_filter( 'anrghg_complement_anchor_padding', function() { return '0.2'; } );



/**
 * Anchor tooltips (Notes and sources)
 *
 * These tooltips work without JavaScript and are fully AMP compatible.
 * On combined complements’ list numbers, the list of anchors is
 * displayed in similar tooltips by default. They are given an extra
 * section with respect to upcoming styling options.
 */

/**
 * Activation
 *
 * '1': Complements show in tooltips on hovering their anchor.
 * '0': No tooltips are added to anchors.
 */
add_filter( 'anrghg_anchor_tooltips_active', function() { return '1'; } );

/**
 * Display on tap
 *
 * This behavior is not recommended given the ability to hover on mobiles
 * by tap-and-hold. The simultaneous display of the contextual menu is an
 * undesired side effect.
 *
 * This feature works by HTML and CSS only, without JavaScript.
 *
 * '1': Tooltips display on tapping or clicking the anchor;
 * '0': Tooltips display on hovering the anchor:
 */
add_filter( 'anrghg_display_anchor_tooltips_on_tap', function() { return '0'; } );

/**
 * Configure the string delimiting the end of a tooltip text
 *
 * Separates the dedicated tooltip text from the text displayed in the list.
 *
 * Suggestions:
 * - Easy input:   '||';
 * - Unambiguous:  '[/view]';
 * - Free example: '[/ดู]':
 */
add_filter( 'anrghg_anchor_tooltip_end', function() { return '[/view]'; } );

/**
 * Configure the string delimiting the start of a complement list link
 *
 * This and the following strings bracket text linked to the complement in the list.
 * Clicking this link text has the same effect as clicking the anchor.
 *
 * Suggestions:
 * - Easy input:   '{{';
 * - Unambiguous:  '[link]';
 * - Free example: '[リンク]':
 */
add_filter( 'anrghg_anchor_tooltip_list_link_start', function() { return '[link]'; } );

/**
 * Configure the string delimiting the end of a complement list link
 *
 * Suggestions:
 * - Easy input:   '}}';
 * - Unambiguous:  '[/link]';
 * - Free example: '[/リンク]':
 */
add_filter( 'anrghg_anchor_tooltip_list_link_end', function() { return '[/link]'; } );

/**
 * Previous delimiters for tooltips
 *
 * If delimiters are in use that are no longer preferred, they
 * may be configured here, along with the ID of the first post
 * where the new delimiters as configured above will be used.
 *
 * Leave empty to skip any of these configurations.
 *
 * These are only the tooltip-related keys. All other previous
 * delimiters along with the post ID threshold are in the main
 * section above under the title: * Previous delimiters
 */
add_filter( 'anrghg_previous_anchor_tooltip_end', function() { return ''; } );
add_filter( 'anrghg_previous_tooltip_list_link_start', function() { return ''; } );
add_filter( 'anrghg_previous_tooltip_list_link_end', function() { return ''; } );

/**
 * Read more link in dedicated note tooltips
 *
 * These texts are appended to the content of dedicated tooltips.
 * Complements are never truncated for tooltips (responsive to handle any length).
 * Notes and sources do not replicate the dedicated tooltip text.
 *
 * '1': A link is appended in the tooltip;
 * '0': Only the anchor is the link.
 */
add_filter( 'anrghg_note_tooltip_list_link_active', function() { return '1'; } );
add_filter( 'anrghg_note_tooltip_list_link_text', function() { return 'Read note'; } );

/**
 * Read more link in dedicated source tooltips
 *
 * '1': A link is appended in the tooltip;
 * '0': Only the anchor is the link.
 */
add_filter( 'anrghg_source_tooltip_list_link_active', function() { return '1'; } );
add_filter( 'anrghg_source_tooltip_list_link_text', function() { return 'Read source'; } );

/**
 * Generic tooltips option
 *
 * A generic tooltip as requested has a predefined text
 * with a dynamic link to the related list item.
 */
add_filter( 'anrghg_generic_note_tooltip_active', function() { return '0'; } );
add_filter( 'anrghg_generic_note_tooltip_content', function() { return 'Please click %1$s here%2$s to read the note.'; } );
add_filter( 'anrghg_generic_source_tooltip_active', function() { return '0'; } );
add_filter( 'anrghg_generic_source_tooltip_content', function() { return 'Please click %1$s here%2$s to read the source.'; } );



/**
 * Tooltip position (Notes and sources).
 */

/**
 * Maximum width
 *
 * Applies to classic tooltips on desktop; these may hang in the margin.
 *
 * Unit: pixels
 */
add_filter( 'anrghg_small_anchor_tooltip_maximum_width', function() { return '290'; } );

/**
 * Horizontal offset
 *
 * Possible values for the edge are 'left' and 'right'.
 *
 * Offset or inset unit: pixels
 */
add_filter( 'anrghg_small_anchor_tooltip_horizontal_edge', function() { return 'left'; } );
add_filter( 'anrghg_small_anchor_tooltip_horizontal_inset', function() { return '-145'; } );

/**
 * Vertical offset
 *
 * Possible values for the edge are 'top' and 'bottom'.
 *
 * Offset or inset unit: pixels
 */
add_filter( 'anrghg_small_anchor_tooltip_vertical_edge', function() { return 'bottom'; } );
add_filter( 'anrghg_small_anchor_tooltip_vertical_inset', function() { return '30'; } );

/**
 * Length breakpoint
 *
 * Up to this length, display is classic; longer tooltips are fullwidth.
 *
 * Unit: number of characters
 */
add_filter( 'anrghg_anchor_tooltip_str_length_breakpoint', function() { return '400'; } );

/**
 * Mobile breakpoint
 *
 * Small tooltips display full-wide on small screens; else they require a side column.
 * The most common screen width breakpoints in portrait orientation include:
 *     360px
 *     375px
 *     414px
 *     768px
 *     864px
 *    1080px
 *
 * Unit: pixels
 */
add_filter( 'anrghg_small_tooltip_mobile_breakpoint', function() { return '768'; } );

/**
 * Scrollable
 *
 * This only ever applies to full-width tooltips.
 * If so, excess content of any length becomes scrollable.
 * But nested tooltips near the border are no longer able to display.
 *
 * '1': Tooltips may become scrollable and crop nested tooltips.
 * '0': Height and nested tooltips are not cropped.
 */
add_filter( 'anrghg_scrollable_anchor_tooltips', function() { return '0'; } );

/**
 * Maximum height
 *
 * This setting is ineffective unless scrollable tooltips are active.
 * This only ever applies to full-width tooltips.
 * If so, excess content of any length becomes scrollable.
 * But nested tooltips near the border are no longer able to display.
 *
 * Unit: pixels
 */
add_filter( 'anrghg_anchor_tooltip_maximum_height', function() { return '240'; } );



/**
 * Tooltip aspect (Notes and sources).
 */

/**
 * Timing
 *
 * Fading in and out with a delay and over a duration,
 * following one of the standard timing functions.
 *
 * Time unit: milliseconds;
 * Functions: linear, ease-out, ease, ease-in-out, ease-in.
 */
add_filter( 'anrghg_anchor_tooltip_fade_in_delay', function() { return '0'; } );
add_filter( 'anrghg_anchor_tooltip_fade_in_duration', function() { return '200'; } );
add_filter( 'anrghg_anchor_tooltip_fade_in_function', function() { return 'ease-in-out'; } );
add_filter( 'anrghg_anchor_tooltip_fade_out_delay', function() { return '500'; } );
add_filter( 'anrghg_anchor_tooltip_fade_out_duration', function() { return '1000'; } );
add_filter( 'anrghg_anchor_tooltip_fade_out_function', function() { return 'ease-in-out'; } );

/**
 * Font size
 *
 * The font size has only the absolute size option.
 *
 * Unit: pixels.
 */
add_filter( 'anrghg_anchor_tooltip_font_size', function() { return '15'; } );

/**
 * Line height
 *
 * Unitless, times the font size.
 */
add_filter( 'anrghg_anchor_tooltip_line_height', function() { return '1.5'; } );

/**
 * Colors
 *
 * Foreground and background colors.
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_anchor_tooltip_foreground_color', function() { return '#000000'; } );
add_filter( 'anrghg_anchor_tooltip_background_color', function() { return '#FFFFFF'; } );

/**
 * Border
 *
 * Width:  Pixels.
 * Style:  Keyword solid,dotted,dashed,double,inset,outset,ridge,groove,none,hidden.
 * Color:  Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 * Radius: Pixels.
 */
add_filter( 'anrghg_anchor_tooltip_border_width', function() { return '1'; } );
add_filter( 'anrghg_anchor_tooltip_border_style', function() { return 'solid'; } );
add_filter( 'anrghg_anchor_tooltip_border_radius', function() { return '0'; } );
add_filter( 'anrghg_anchor_tooltip_border_color', function() { return '#00FF00'; } );

/**
 * Shadow
 *
 * X-Offset: Pixels.
 * Y-Offset: Pixels.
 * Blur:     Pixels.
 * Spread:   Pixels.
 * Color: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_anchor_tooltip_shadow_x_offset', function() { return '-5'; } );
add_filter( 'anrghg_anchor_tooltip_shadow_y_offset', function() { return '7'; } );
add_filter( 'anrghg_anchor_tooltip_shadow_blur', function() { return '5'; } );
add_filter( 'anrghg_anchor_tooltip_shadow_spread', function() { return '2'; } );
add_filter( 'anrghg_anchor_tooltip_shadow_color', function() { return '#484848'; } );

/**
 * Padding
 *
 * The order is intuitive instead of geometric like in CSS.
 *
 * Unit: Pixels.
 */
add_filter( 'anrghg_anchor_tooltip_padding_top', function() { return '10'; } );
add_filter( 'anrghg_anchor_tooltip_padding_start', function() { return '20'; } );
add_filter( 'anrghg_anchor_tooltip_padding_end', function() { return '18'; } );
add_filter( 'anrghg_anchor_tooltip_padding_bottom', function() { return '10'; } );



/**
 * Backlinks (Notes and sources).
 *
 * Backlink tooltips are configurable separately.
 */

/**
 * Backlink symbol
 *
 * Backlinks from the complement list entries to the complement
 * anchors are provided for convenience despite with hard links
 * they are not required for functionality.
 *
 * Possible positions are before the number or after the number
 * as well as appended to the complement text for convenience.
 *
 * The number backlink symbol and the tail backlink symbol are
 * configurable individually; however, while the tail backlink
 * is optional, as is the display of a backlink symbol next to
 * the complement number, the number’s backlink role is stable.
 *
 * The select box (with 59 presets grouped into four categories
 * such as up arrows) is overridden by an input field, which is
 * therefore used for the configuration filter.
 *
 * The number backlink symbol display has three options:
 * '-1': Before the number;
 *  '1': After the number;
 *  '0': No symbol displayed:
 */
add_filter( 'anrghg_number_backlink_symbol_display', function() { return '1'; } );

/**
 * Symbol used as link text
 *
 * The full list of characters supported in the select box is:
 *
 * Upwards Arrows: ↑ (U+2191), ↟ (U+219F), ↥ (U+21A5), ⇈ (U+21C8),
 * ⇑ (U+21D1), ⇞ (U+21DE), ⇡ (U+21E1), ⇧ (U+21E7), ⇪ (U+21EA),
 * ⇫ (U+21EB), ⇮ (U+21EE), ⇯ (U+21EF), ⟰ (U+27F0), ⤊ (U+290A),
 * ⤉ (U+2909), ⤒ (U+2912), ⥉ (U+2949), ⥣ (U+2963);
 *
 * Emoji: ⬆ (U+2B06), ⤴ (U+2934), ⏫ (U+23EB),
 * 🔼 (U+1F53C), 🔺 (U+1F53A);
 *
 * Upwards-pointing shapes: ^ (U+005E), ⌃ (U+2303), ⋀ (U+22C0),
 * ⨇ (U+2A07), ⩕ (U+2A55), ⩓ (U+2A53), ⋏ (U+22CF), ⩚ (U+2A5A),
 * ⟑ (U+27D1), ⩑ (U+2A51), ⍍ (U+234D), ⍓ (U+2353), ⌅ (U+2305),
 * ⌆ (U+2306), ⌤ (U+2324), ⍙ (U+2359), ▲ (U+25B2), △ (U+25B3),
 * ▴ (U+25B4), ▵ (U+25B5), ◬ (U+25EC), ◭ (U+25ED), ◮ (U+25EE),
 * ⍋ (U+234B), ⟁ (U+27C1), ≜ (U+225C), ≙ (U+2259);
 *
 * Return-like Arrows: ⬏ (U+2B0F), ⭜ (U+2B5C), ⮠ (U+2BA0),
 * ⮡ (U+2BA1), ⮥ (U+2BA5), ⮤ (U+2BA4), ⮍ (U+2B8D),
 * ⮵ (U+2BB5), ⮴ (U+2BB4).
 */
add_filter( 'anrghg_number_backlink_symbol_input', function() { return '↑'; } );

/**
 * Tail backlink
 *
 * The tail backlink display has two options only:
 *  '1': Append a backlink;
 *  '0': No backlink appended.
 *
 * Both instances have their own select box and overriding input field,
 * but suggested characters are the same.
 */
add_filter( 'anrghg_tail_backlink_symbol_display', function() { return '0'; } );
add_filter( 'anrghg_tail_backlink_symbol_input', function() { return '↑'; } );

/**
 * Backlinks of combined complements in the lists
 *
 * The backlinks of combined complements are provided in a rich
 * tooltip displaying by default through CSS, not deactivatable
 * but not obtrusive either and never showing up if the visitor
 * uses the backbutton to scroll back as hinted when hovering a
 * combined complements list number, in tooltips either rich in
 * this feature, or plain in the feature configurable next.
 *
 * In these rich tooltips, the backlink enumeration is preceded
 * by a piece of text, and followed by another piece of text as
 * configured below:
 */
add_filter( 'anrghg_backlink_rich_tooltip_first', function() { return 'This complement is linked from the following anchors:'; } );
add_filter( 'anrghg_backlink_rich_tooltip_last', function() { return 'Please use the backbutton to scroll up exactly where you left.'; } );

/**
 * Backlink tooltip timing
 *
 * Fading in and out with a delay and over a duration,
 * following one of the standard timing functions.
 *
 * Time unit: milliseconds;
 * Functions: linear, ease-out, ease, ease-in-out, ease-in.
 */
add_filter( 'anrghg_anchor_tooltip_fade_in_delay', function() { return '0'; } );
add_filter( 'anrghg_anchor_tooltip_fade_in_duration', function() { return '200'; } );
add_filter( 'anrghg_anchor_tooltip_fade_in_function', function() { return 'ease-in-out'; } );
add_filter( 'anrghg_anchor_tooltip_fade_out_delay', function() { return '500'; } );
add_filter( 'anrghg_anchor_tooltip_fade_out_duration', function() { return '1000'; } );
add_filter( 'anrghg_anchor_tooltip_fade_out_function', function() { return 'ease-in-out'; } );

/**
 * Backlink tooltip colors
 *
 * Foreground and background colors.
 *
 * Format: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_anchor_tooltip_foreground_color', function() { return '#000000'; } );
add_filter( 'anrghg_anchor_tooltip_background_color', function() { return '#FFFFFF'; } );

/**
 * Backlink tooltip border
 *
 * Width:  Pixels.
 * Style:  Keyword solid,dotted,dashed,double,inset,outset,ridge,groove,none,hidden.
 * Color:  Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 * Radius: Pixels.
 */
add_filter( 'anrghg_backlink_tooltip_border_width', function() { return '1'; } );
add_filter( 'anrghg_backlink_tooltip_border_style', function() { return 'solid'; } );
add_filter( 'anrghg_backlink_tooltip_border_radius', function() { return '0'; } );
add_filter( 'anrghg_backlink_tooltip_border_color', function() { return '#00FF00'; } );

/**
 * Backlink tooltip shadow
 *
 * X-Offset: Pixels.
 * Y-Offset: Pixels.
 * Blur:     Pixels.
 * Spread:   Pixels.
 * Color: Keyword or hexadecimal or RGB[A] or HSL[A] color code.
 */
add_filter( 'anrghg_backlink_tooltip_shadow_x_offset', function() { return '-5'; } );
add_filter( 'anrghg_backlink_tooltip_shadow_y_offset', function() { return '7'; } );
add_filter( 'anrghg_backlink_tooltip_shadow_blur', function() { return '5'; } );
add_filter( 'anrghg_backlink_tooltip_shadow_spread', function() { return '2'; } );
add_filter( 'anrghg_backlink_tooltip_shadow_color', function() { return '#484848'; } );

/**
 * Backlink tooltip padding
 *
 * The order is intuitive instead of geometric like in CSS.
 *
 * Unit: Pixels.
 */
add_filter( 'anrghg_backlink_tooltip_padding_top', function() { return '10'; } );
add_filter( 'anrghg_backlink_tooltip_padding_start', function() { return '20'; } );
add_filter( 'anrghg_backlink_tooltip_padding_end', function() { return '18'; } );
add_filter( 'anrghg_backlink_tooltip_padding_bottom', function() { return '10'; } );

/**
 * Optional plain tooltip on backlink of individual complement
 *
 * The mode setting has three options:
 * '2': Verbose configuration;
 * '1': Symbolic configuration;
 * '0': None:
 */
add_filter( 'anrghg_backlink_plain_tooltip_mode', function() { return '1'; } );
add_filter( 'anrghg_backlink_plain_tooltip_verbose', function() { return 'Hint: Hit the backbutton instead.'; } );
add_filter( 'anrghg_backlink_plain_tooltip_symbolic', function() { return 'Alt + ⬅'; } );



/**
 * Lists (Notes and sources).
 *
 * Notes and sources are listed separately.
 *
 * Everything related to the complement lists is grouped in
 * this section for ease of retrieval and shorter sections.
 */

/**
 * Note and source list processing priority level
 *
 * This priority level matters as it determines the order relative to
 * other features appended by this or other plugins.
 *
 * The bigger the integer, the lower the priority. The biggest allowed value is
 * PHP_INT_MAX i.e. 2147483647.
 *
 * '-1': Highest priority;
 * '0':  Input the priority level as an integer;
 * '1':  Lowest priority:
 */
add_filter( 'anrghg_complement_priority_select', function() { return '-1'; } );

/**
 * Note and source list processing priority input
 *
 * This value may be any integer between '-2147483648' and '2147483647'.
 *
 * However, negative values are unsafe, and so are values from 0 to 8, in that
 * priority higher than 9 (from 8 downwards) for Notes and sources causes image
 * and list blocks to disappear on public pages.
 *
 * So the safe range is 9…2×10⁹, while the possible range is −2×10⁹…2×10⁹.
 */
add_filter( 'anrghg_complement_priority_input', function() { return '1000'; } );

/**
 * ARIA labels of complement list numbers
 *
 * For screen readers not to spell out a bare number out of context,
 * the anchor numbers as link text are ARIA-hidden, and a full label
 * is present to be read by screen readers instead. The placeholder,
 * required for internationalization to account for diverging usages
 * across locales, represents the note or source number.
 */
add_filter( 'anrghg_note_list_number_aria_label', function() { return 'Note number %d'; } );
add_filter( 'anrghg_source_list_number_aria_label', function() { return 'Reference number %d'; } );

/**
 * Complement list grouping
 *
 * When a note list and a source list are displayed one after the other,
 * an optional group heading may be displayed.
 *
 * As note list labels and source list labels are configurable in a more
 * fine-grained manner on a per-post basis in the metabox, and per instance
 * in each optional ‘Notes and sources’ block at the end of each section
 * considered for listing complements separately, an optional group heading
 * may be displayed on top.
 */
add_filter( 'anrghg_complement_list_grouping_active', function() { return '1'; } );
add_filter( 'anrghg_complement_list_group_heading', function() { return 'Notes and References'; } );

/**
 * Complement list label elements and font size
 *
 * By default, the labels are heading elements, and their level is determined
 * algorithmically. That behavior is kept when the element’s setting is zero.
 * When the value is 7, the label is wrapped in a div instead.
 *
 * So the minimum is 0 for ‘keep automation’.
 * The maximum is 7 for ‘use a div instead’.
 * Values in excess on either side will be cropped to the minimum or maximum.
 *
 * The associated font size has 4 options:
 *  '0': inherit (for a div element, results in setting the size to 1.5em);
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_list_group_heading_element', function() { return '0'; } );
add_filter( 'anrghg_list_group_heading_font_size_option', function() { return '0'; } );
add_filter( 'anrghg_list_group_heading_font_size_px', function() { return '15'; } );
add_filter( 'anrghg_list_group_heading_font_size_em', function() { return '1.5'; } );
add_filter( 'anrghg_list_group_heading_font_size_rem', function() { return '1.5'; } );

add_filter( 'anrghg_complement_list_label_element', function() { return '0'; } );
add_filter( 'anrghg_complement_list_label_font_size_opt', function() { return '0'; } );
add_filter( 'anrghg_complement_list_label_font_size_px', function() { return '15'; } );
add_filter( 'anrghg_complement_list_label_font_size_em', function() { return '1.5'; } );
add_filter( 'anrghg_complement_list_label_font_size_rem', function() { return '1.5'; } );

/**
 * Complement list labels
 *
 * The default labels may be number sensitive to some extent, i.e. only for
 * singular and dual. (The `ngettext()` function works with fixed strings.)
 * The plural label acts as a fallback when other numbers are empty.
 *
 * To make lists with empty labels accessible, an ARIA label is inserted if
 * the label ends actually up empty. Else it is not, so the label is read.
 */
add_filter( 'anrghg_note_list_label_aria_label', function() { return 'Note list'; } );
add_filter( 'anrghg_note_list_label_plural', function() { return 'Notes'; } );
add_filter( 'anrghg_note_list_label_dual', function() { return 'Notes'; } );
add_filter( 'anrghg_note_list_label_singular', function() { return 'Note'; } );

add_filter( 'anrghg_source_list_label_aria_label', function() { return 'Source list'; } );
add_filter( 'anrghg_source_list_label_plural', function() { return 'Sources'; } );
add_filter( 'anrghg_source_list_label_dual', function() { return 'Sources'; } );
add_filter( 'anrghg_source_list_label_singular', function() { return 'Source'; } );

/**
 * List layout options for notes and for sources
 *
 * '1': Display the lists in 1 column;
 * '2': Display the lists in 2 columns, except on mobiles;
 * '3': Display the lists in 3 columns, except on mobiles:
 */
add_filter( 'anrghg_note_list_layout', function() { return '1'; } );
add_filter( 'anrghg_source_list_layout', function() { return '1'; } );

/**
 * Collapsible behavior and collapsed state
 *
 * Expanding and collapsing may be triggered by clicking the list
 * label or the twistie next to it, without JavaScript.
 *
 * That toggle may also be actioned by clicking an anchor, at the
 * condition that JavaScript is turned on. JavaScript is also used
 * in the AMP `toggleChecked()` action involved in this process.
 *
 * By default, and anyway if JavaScript is turned off, only the
 * target item displays.
 *
 * '1':  Collapsed when the page loads, expands on click;
 * '-1': Displays expanded on load, collapsible on click;
 * '0':  Always displays in full length, cannot collapse:
 */
add_filter( 'anrghg_note_list_collapsing', function() { return '1'; } );
add_filter( 'anrghg_source_list_collapsing', function() { return '1'; } );

/**
 * List expansion on clicking an anchor
 *
 * '1': The whole list expands on clicking an anchor;
 * '0': On clicking an anchor, only the target item displays:
 */
add_filter( 'anrghg_full_note_list_expand_from_anchor', function() { return '0'; } );
add_filter( 'anrghg_full_source_list_expand_from_anchor', function() { return '0'; } );

/**
 * Option displaying URLs as text after link texts in complement lists
 *
 * With this active, “Example” becomes “Example (https://example.net)”.
 * The feature may be activated individually for note lists and for source lists.
 */
add_filter( 'anrghg_display_urls_note_list', function() { return '0'; } );
add_filter( 'anrghg_display_urls_source_list', function() { return '0'; } );

/**
 * For that option, two display styles can be toggled globally:
 *
 * '1': The displayed URLs are selectable and unlinked;
 * '0': The displayed URLs are unselectable and extend the link text, with
 *      CSS selector: .anrghg_complement_list_content a[href^=http]::after
 */
add_filter( 'anrghg_display_urls_selectable', function() { return '1'; } );



/**
 * Standalone Reference lists
 *
 * A standalone ‘Reference list’ can be configured in the
 * References block, with a label and collapsing behavior
 * tailored to the instance that would override the value
 * of each of the following configuration keys.
 *
 * The writing direction can be configured in the block.
 */

/**
 * Accessibility
 *
 * The ARIA label is used when the label is configured to
 * an empty string in the settings, and is not configured
 * in the block either.
 *
 * Each item has another ARIA label with its number.
 */
add_filter( 'anrghg_reference_list_aria_label', function() { return 'Reference list'; } );
add_filter( 'anrghg_reference_item_aria_label', function() { return 'Reference number %d'; } );

/**
 * List label
 */
add_filter( 'anrghg_reference_list_label', function() { return 'References'; } );

/**
 * Reference list label element and font size
 *
 * By default, the label is a heading element, and its level is determined
 * algorithmically. That behavior is kept when the element’s setting is zero.
 * When the value is 7, the label is wrapped in a div instead.
 *
 * So the minimum is 0 for ‘keep automation’.
 * The maximum is 7 for ‘use a div instead’.
 * Values in excess on either side will be cropped to the minimum or maximum.
 *
 * The associated font size has 4 options:
 *  '0': inherit (for a div element, results in setting the size to 1.5em);
 *  '1': absolute size in pixels;
 *  '2': relative size in em;
 *  '3': relative size in root em.
 */
add_filter( 'anrghg_reference_list_label_element', function() { return '0'; } );
add_filter( 'anrghg_reference_list_label_font_size_option', function() { return '0'; } );
add_filter( 'anrghg_reference_list_label_font_size_px', function() { return '15'; } );
add_filter( 'anrghg_reference_list_label_font_size_em', function() { return '1.5'; } );
add_filter( 'anrghg_reference_list_label_font_size_rem', function() { return '1.5'; } );


/**
 * Numbering system
 *
 * '0': Western Arabic numerals;
 * '1': Eastern Arabic numerals;
 * '2': Uppercase Roman numerals;
 * '3': Lowercase Roman numerals;
 * '4': Uppercase Latin numerals;
 * '5': Lowercase Latin numerals:
 */
add_filter( 'anrghg_reference_list_numbering_system', function() { return '0'; } );

/**
 * Bullet
 *
 * Bullets may be displayed instead of numbers. Then, the
 * numbering system is still used for ARIA labels and IDs.
 *
 * '1': Display bullet, not number;
 * '0': Display the numbers.
 */
add_filter( 'anrghg_reference_list_bullet_active', function() { return '0'; } );

/**
 * Bullet character
 *
 * The input may be a Unicode character, HTML entity or numeric character reference.
 * The character is prepended visually only, not in the text stream.
 *
 * Suggestions: •, ▪, ― (U+2015).
 *
 * Full list supported in select box:
 *
 * upcoming. @todo
 */
add_filter( 'anrghg_reference_list_bullet_input', function() { return '•'; } );

/**
 * List item link
 *
 * Makes each item’s number or bullet link text of a fragment identifier.
 *
 * ’1': Add a link to each item.
 * ’0': Do not add links.
 */
add_filter( 'anrghg_reference_item_link_active', function() { return '1'; } );

/**
 * Number tooltip
 *
 * Plain tooltip on hovering a number:
 */
add_filter( 'anrghg_reference_item_tooltip_text', function() { return 'Link to this reference'; } );

/**
 * URL ID prefix
 */
add_filter( 'anrghg_reference_list_url_id_prefix', function() { return 'ref'; } );

/**
 * Collapsible behavior and collapsed state
 *
 * '1':  Collapsed when the page loads, expands on click;
 * '-1': Displays expanded on load, collapsible on click;
 * '0':  Always displays in full length, cannot collapse:
 */
add_filter( 'anrghg_reference_list_collapsing', function() { return '1'; } );

/**
 * Reference list processing priority level
 *
 * The priority level is relevant to determine whether:
 * * The label shows up in the table of contents;
 * * The list items get paragraph links prepended.
 *
 * The bigger the integer, the lower the priority. The biggest allowed value is
 * PHP_INT_MAX i.e. 2147483647.
 *
 * '-1': Highest priority;
 * '0':  Input the priority level as an integer;
 * '1':  Lowest priority:
 */
add_filter( 'anrghg_reference_list_priority_select', function() { return '0'; } );

/**
 * Reference list processing priority input
 *
 * This value may be any integer between '-2147483648' and '2147483647'.
 *
 * However, negative values are unsafe, and so are values from 0 to 8, in that
 * priority higher than 9 (from 8 downwards) for Notes and sources causes image
 * and list blocks to disappear on public pages.
 *
 * So the safe range is 9…2×10⁹, while the possible range is −2×10⁹…2×10⁹.
 */
add_filter( 'anrghg_reference_list_priority_input', function() { return '1000'; } );



/**
 * For security reasons, the following hooks are not filtered:
 */

// 'anrghg_login_control_constant_end'
// 'anrghg_login_deactivation_profile'
// 'anrghg_auth_duration_edit'
// 'anrghg_auth_expiration_days'

// 'anrghg_keep_reusables_history'
// 'anrghg_keep_settings_history'

/**
 * These hooks are called too early to effectively apply filters:
 */

// 'anrghg_complement_list_footer_deferral'
// 'anrghg_complement_list_output_buffer'

/**
 * The following hooks are not filtered because they do not affect
 * public pages. They are related to the editor UI or the settings
 * page or they do not yield final values or they are overridable.
 */

// 'anrghg_menu_level'
// 'anrghg_menu_position'
// 'anrghg_menu_item_template_editor'
// 'anrghg_menu_item_settings_page'
// 'anrghg_menu_item_format_conversion'

// 'anrghg_block_setting_elements'
// 'anrghg_thank_you_block'
// 'anrghg_table_of_contents_block'
// 'anrghg_complements_block'
// 'anrghg_references_block'

// 'anrghg_meta_box_active'
// 'anrghg_meta_box_thank_you_message'
// 'anrghg_meta_box_contents_insert'
// 'anrghg_meta_box_contents_alignment'
// 'anrghg_meta_box_contents_collapse'
// 'anrghg_meta_box_contents_label'
// 'anrghg_meta_box_complements_process_active'
// 'anrghg_meta_box_complements_writing_dir'
// 'anrghg_meta_box_complement_delimiters'
// 'anrghg_meta_box_complement_list_labels'
// 'anrghg_meta_box_complement_list_collapse'
// 'anrghg_meta_box_complement_list_footer_defer'
// 'anrghg_meta_box_published_first'
// 'anrghg_published_first_top_prefill'
// 'anrghg_published_first_end_prefill'

// 'anrghg_template_editor_tinymce_active'
// 'anrghg_template_editor_line_break_on_enter'
// 'anrghg_template_editor_list_rich_text_view'
// 'anrghg_template_editor_move_into_text_mode'
// 'anrghg_template_editor_unescape_pointy_brack'

// 'anrghg_settings_display_information'
// 'anrghg_settings_tab_nav'

// 'anrghg_paragraph_link_character_select'
// 'anrghg_number_backlink_symbol_select'
// 'anrghg_tail_backlink_symbol_select'
// 'anrghg_reference_list_bullet_select'

// 'anrghg_note_delimiter_preset'
// 'anrghg_easy_note_start'
// 'anrghg_easy_note_end'
// 'anrghg_safe_note_start'
// 'anrghg_safe_note_end'
// 'anrghg_free_note_start'
// 'anrghg_free_note_end'
// 'anrghg_source_delimiter_preset'
// 'anrghg_easy_source_start'
// 'anrghg_easy_source_end'
// 'anrghg_safe_source_start'
// 'anrghg_safe_source_end'
// 'anrghg_free_source_start'
// 'anrghg_free_source_end'
// 'anrghg_name_delimiter_preset'
// 'anrghg_easy_name_start'
// 'anrghg_easy_name_end'
// 'anrghg_safe_name_start'
// 'anrghg_safe_name_end'
// 'anrghg_free_name_start'
// 'anrghg_free_name_end'
// 'anrghg_tooltip_delimiter_preset'
// 'anrghg_easy_tooltip_end'
// 'anrghg_safe_tooltip_end'
// 'anrghg_free_tooltip_end'
// 'anrghg_list_link_delimiter_preset'
// 'anrghg_easy_list_link_start'
// 'anrghg_easy_list_link_end'
// 'anrghg_safe_list_link_start'
// 'anrghg_safe_list_link_end'
// 'anrghg_free_list_link_start'
// 'anrghg_free_list_link_end'



/**
 * Other filters are being added as soon as implemented and documented.
 */
