<?php
// phpcs:ignoreFile
/**
 * Additions to WordPress Configuration wp-config.php.
 *
 * @since 0.25.0
 * @package WordPress
 * @subpackage A.N.R.GHG Publishing Toolkit
 *
 * CAUTION: Please do not edit this file in this plugin folder,
 * since it is not included when WordPress loads this plugin,
 * and because it will be overwritten during plugin updates.
 *
 * HOW TO: Copy-paste the needed lines into `wp-config.php`,
 * edit according to your specific needs and requirements.
 * @link https://wordpress.org/support/article/editing-wp-config-php/
 */

defined( 'ABSPATH' ) || exit( nl2br( "\r\n\r\n&nbsp; &nbsp; &nbsp; Sorry, this PHP file cannot be displayed in the browser." ) );

/**
 * Memory limit
 *
 * If no memory limit is set in `wp-config.php`, WordPress sets it to 40M
 * for a single site, or to 64M for a multisite. WordPress throws a fatal
 * error if it needs more memory.
 *
 * This number should match the memory limit set in the website’s hosting.
 * In cPanel it can be set under PHP Version > Options tab > memory_limit,
 * or in the “MultiPHP INI Editor” under “Software” in the “Tools” menu on
 * the cPanel home page. Recommended options include:
 * '64M'; '128M'; '192M'; '256M'; '368M'; '512M'; '1024M'.
 *
 * @link https://wordpress.org/support/topic/plugin-not-work-42/#post-14788366
 * @link https://wordpress.org/support/topic/fatal-error-allowed-memory-size-of-11/
 * @link https://www.wpbeginner.com/wp-tutorials/fix-wordpress-memory-exhausted-error-increase-php-memory/
 * @link https://stackoverflow.com/questions/21680244/fatal-error-allowed-memory-size-of-268435456-bytes-exhausted-tried-to-allocate
 * @see wp-includes/default-constants.php:40
 */
define( 'WP_MEMORY_LIMIT', '1024M' );

/**
 * Revisions a.k.a older versions of posts and pages
 * 
 * By default, WordPress keeps extra copies of every post and page each time it
 * is saved, and even more often, so as to document the full version history of
 * every post and page.
 * 
 * If this is too much information and ends up taking too much disk space, with
 * backups getting bulky, and potentially restoring the database would be hard,
 * then revisions may be deactivated by defining this constant as false.
 * 
 * Another option is to limit the number of stored revisions as in the example.
 * 
 * @link https://kinsta.com/blog/wordpress-revisions/
 */
define( 'WP_POST_REVISIONS', 5 );

/**
 * Debugging mode
 *
 * WordPress’ debugging mode may be useful also for customizations made in
 * a child theme’s `functions.php`, as suggested for configuration filters
 * and process filters documented separately.
 * @see ./template-filter-config.php
 * @see ./template-filter-output.php
 *
 * If `WP_DEBUG` is false, debugging information is sent by email, while a
 * so-called ‘White Screen of Death’ displays some general information, 
 * @link https://wordpress.org/support/article/debugging-in-wordpress/
 * @link https://wordpress.org/support/article/editing-wp-config-php/
 */
// Activate debugging information output by replacing false with true.
define( 'WP_DEBUG', false );

// Use unminified scripts for easier reference: Replace false with true.
define( 'SCRIPT_DEBUG', false );

// Display debugging information on public pages: Replace false with true.
define( 'WP_DEBUG_DISPLAY', false );

// To keep track of it, debugging information is output by default in
// 'wp-content/debug.log' when 'WP_DEBUG_LOG' is defined as true, but
// another output path may be defined like below.
//
// WARNING: Whatever the location, this file is exposed to the public
// unless the following code snippet is added to the .htaccess file.
// In the process, the wp-config.php file should be protected as well
// by adding "wp-config.php" in the start tag of the Files directive,
// with extended regular expressions supported due to the "~" in the
// opening tag of the "Files" directive:
/*

# Courtesy https://www.wpbeginner.com/beginners-guide/reasons-why-wordpress-site-gets-hacked/
# Courtesy https://mauriciolopez.ml/en/hide-debug-log-file-in-wordpress/
# Courtesy https://www.askapache.com/htaccess/using-filesmatch-and-files-in-htaccess/
# Courtesy https://community.progress.com/s/article/Vulnerability-remediation-the-htaccess-file-is-accessible-by-the-internet
# See https://stackoverflow.com/questions/4299571/can-php-files-be-viewed-across-the-internet-like-html-files
# See @Darbio’s comment: “Putting your variables like this
# is not a recommended method if your only security is that
# 'they won't get rendered to the browser'”.
# Blocks access to `wp-config.php` and `debug.log`.
# This also denies access to `.htaccess` files, although
# usually that is set up in the server configuration.
<Files ~ "(wp-config\.php|debug\.log|\.htaccess)">
  Order Allow,Deny
  Deny from all
</Files>

*/
// Once public access to the debug.log file has been denied, this may
// be added to wp-config.php. For instance the debug.log file will be
// located in the base directory of the WordPress installation:
define( 'WP_DEBUG_LOG', __DIR__ . '/debug.log' );
